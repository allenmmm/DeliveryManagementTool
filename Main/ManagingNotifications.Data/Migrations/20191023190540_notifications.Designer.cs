// <auto-generated />
using System;
using DMT.ManagingNotifications.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DMT.ManagingNotifications.Data.Migrations
{
    [DbContext(typeof(ManagingNotificationsContext))]
    [Migration("20191023190540_notifications")]
    partial class notifications
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ManagingNotifications")
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DMT.ManagingNotifications.Domain.Entities.Status", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("Description");

                    b.Property<int>("NotificationState");

                    b.HasKey("Id");

                    b.ToTable("Statuses","ManagingNotifications");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a09e8195-763c-4b27-aaec-82ced2a41ac8"),
                            Description = "All expected orderbook(s) generated",
                            NotificationState = 1
                        },
                        new
                        {
                            Id = new Guid("c38fc7ec-6b56-4a05-a069-0d4847d72626"),
                            Description = "The planned and overdues table could not be deleted,this will potentially corrupt future orderbook generations",
                            NotificationState = 2
                        },
                        new
                        {
                            Id = new Guid("6a73fe66-4384-4789-9ce1-0887a0957076"),
                            Description = "No expected orderbook(s) generated",
                            NotificationState = 3
                        },
                        new
                        {
                            Id = new Guid("bce9693d-05e0-4cd1-842f-cfe2b3a29eda"),
                            Description = "Orderbook not generated",
                            NotificationState = 3
                        },
                        new
                        {
                            Id = new Guid("e4335e16-f8ac-4b95-8e7a-b5cefa2fcadf"),
                            Description = "Orderbook(s) generation terminated.  Planned and overdues table could not be validated/accessed",
                            NotificationState = 3
                        },
                        new
                        {
                            Id = new Guid("6d7d561b-b477-4f7c-96ba-e3c878273ac9"),
                            Description = "Orderbook(s) generation started",
                            NotificationState = 4
                        },
                        new
                        {
                            Id = new Guid("a26292d7-be2b-481d-aabb-09e97723a6d9"),
                            Description = "Expected orderbook generated",
                            NotificationState = 1
                        });
                });

            modelBuilder.Entity("ManagingNotifications.Domain.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Notifications","ManagingNotifications");
                });

            modelBuilder.Entity("ManagingNotifications.Domain.Entities.Notification", b =>
                {
                    b.OwnsOne("DMT.ManagingNotifications.Domain.ValueObjects.Notification_VO", "Detail", b1 =>
                        {
                            b1.Property<int>("NotificationId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("CustomMessage");

                            b1.Property<DateTime>("DateRaised");

                            b1.Property<Guid>("StatusId");

                            b1.HasKey("NotificationId");

                            b1.ToTable("Notifications","ManagingNotifications");

                            b1.HasOne("ManagingNotifications.Domain.Entities.Notification")
                                .WithOne("Detail")
                                .HasForeignKey("DMT.ManagingNotifications.Domain.ValueObjects.Notification_VO", "NotificationId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
